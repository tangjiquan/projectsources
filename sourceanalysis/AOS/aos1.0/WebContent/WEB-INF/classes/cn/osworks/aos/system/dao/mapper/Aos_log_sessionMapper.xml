<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 会话日志信息表[aos_log_session]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2016-02-24 23:52:40 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Aos_log_sessionMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Aos_log_sessionPO">
		INSERT INTO aos_log_session (
		<if test="user_id_ != null and user_id_ != ''">
	         user_id_, <!-- 用户ID -->
		</if>
		<if test="account_ != null and account_ != ''">
	         account_, <!-- 登录账户 -->
		</if>
		<if test="user_name_ != null and user_name_ != ''">
	         user_name_, <!-- 用户姓名 -->
		</if>
		<if test="ip_address_ != null and ip_address_ != ''">
	         ip_address_, <!-- 客户端IP地址 -->
		</if>
		<if test="client_type_ != null and client_type_ != ''">
	         client_type_, <!-- 客户端类型 -->
		</if>
		<if test="owner_ != null and owner_ != ''">
	         owner_, <!-- 宿主 -->
		</if>
		<if test="create_time_ != null and create_time_ != ''">
	         create_time_, <!-- 登录时间 -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- 会话ID -->
	   </if>
		)VALUES(
		<if test="user_id_ != null and user_id_ != ''">
	          #{user_id_, jdbcType=VARCHAR}, <!-- 用户ID -->
	    </if>
		<if test="account_ != null and account_ != ''">
	          #{account_, jdbcType=VARCHAR}, <!-- 登录账户 -->
	    </if>
		<if test="user_name_ != null and user_name_ != ''">
	          #{user_name_, jdbcType=VARCHAR}, <!-- 用户姓名 -->
	    </if>
		<if test="ip_address_ != null and ip_address_ != ''">
	          #{ip_address_, jdbcType=VARCHAR}, <!-- 客户端IP地址 -->
	    </if>
		<if test="client_type_ != null and client_type_ != ''">
	          #{client_type_, jdbcType=VARCHAR}, <!-- 客户端类型 -->
	    </if>
		<if test="owner_ != null and owner_ != ''">
	          #{owner_, jdbcType=VARCHAR}, <!-- 宿主 -->
	    </if>
		<if test="create_time_ != null and create_time_ != ''">
	          #{create_time_, jdbcType=VARCHAR}, <!-- 登录时间 -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- 会话ID -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Aos_log_sessionPO">
		INSERT INTO aos_log_session (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- 会话ID -->
		    #{user_id_, jdbcType=VARCHAR},  <!-- 用户ID -->
		    #{account_, jdbcType=VARCHAR},  <!-- 登录账户 -->
		    #{user_name_, jdbcType=VARCHAR},  <!-- 用户姓名 -->
		    #{ip_address_, jdbcType=VARCHAR},  <!-- 客户端IP地址 -->
		    #{client_type_, jdbcType=VARCHAR},  <!-- 客户端类型 -->
		    #{owner_, jdbcType=VARCHAR},  <!-- 宿主 -->
		    #{create_time_, jdbcType=VARCHAR}  <!-- 登录时间 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_log_sessionPO">
		UPDATE aos_log_session
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- 会话ID -->
			</if>
			<if test="user_id_ != null">
		          user_id_ = #{user_id_, jdbcType=VARCHAR},  <!-- 用户ID -->
			</if>
			<if test="account_ != null">
		          account_ = #{account_, jdbcType=VARCHAR},  <!-- 登录账户 -->
			</if>
			<if test="user_name_ != null">
		          user_name_ = #{user_name_, jdbcType=VARCHAR},  <!-- 用户姓名 -->
			</if>
			<if test="ip_address_ != null">
		          ip_address_ = #{ip_address_, jdbcType=VARCHAR},  <!-- 客户端IP地址 -->
			</if>
			<if test="client_type_ != null">
		          client_type_ = #{client_type_, jdbcType=VARCHAR},  <!-- 客户端类型 -->
			</if>
			<if test="owner_ != null">
		          owner_ = #{owner_, jdbcType=VARCHAR},  <!-- 宿主 -->
			</if>
			<if test="create_time_ != null">
		          create_time_ = #{create_time_, jdbcType=VARCHAR},  <!-- 登录时间 -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_log_session WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_log_sessionPO">
		SELECT
		<include refid="column" />
		FROM aos_log_session WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_log_sessionPO">
		SELECT
		    <include refid="column" />
		FROM aos_log_session
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_log_sessionPO">
		SELECT
			<include refid="column" />	
		FROM aos_log_session
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_log_sessionPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_log_session
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_log_sessionPO">
		SELECT
			<include refid="column" />	
		FROM aos_log_session
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_log_sessionPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_log_session
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM aos_log_session
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_log_session
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- 会话ID -->
		  user_id_,  <!-- 用户ID -->
		  account_,  <!-- 登录账户 -->
		  user_name_,  <!-- 用户姓名 -->
		  ip_address_,  <!-- 客户端IP地址 -->
		  client_type_,  <!-- 客户端类型 -->
		  owner_,  <!-- 宿主 -->
		  create_time_  <!-- 登录时间 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  aos_log_session.id_,  <!-- 会话ID -->
		  aos_log_session.user_id_,  <!-- 用户ID -->
		  aos_log_session.account_,  <!-- 登录账户 -->
		  aos_log_session.user_name_,  <!-- 用户姓名 -->
		  aos_log_session.ip_address_,  <!-- 客户端IP地址 -->
		  aos_log_session.client_type_,  <!-- 客户端类型 -->
		  aos_log_session.owner_,  <!-- 宿主 -->
		  aos_log_session.create_time_  <!-- 登录时间 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- 会话ID -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ = #{user_id_}  <!-- 用户ID -->
		</if>
	    <if test="account_ != null and account_ != ''">
		      AND account_ = #{account_}  <!-- 登录账户 -->
		</if>
	    <if test="user_name_ != null and user_name_ != ''">
		      AND user_name_ = #{user_name_}  <!-- 用户姓名 -->
		</if>
	    <if test="ip_address_ != null and ip_address_ != ''">
		      AND ip_address_ = #{ip_address_}  <!-- 客户端IP地址 -->
		</if>
	    <if test="client_type_ != null and client_type_ != ''">
		      AND client_type_ = #{client_type_}  <!-- 客户端类型 -->
		</if>
	    <if test="owner_ != null and owner_ != ''">
		      AND owner_ = #{owner_}  <!-- 宿主 -->
		</if>
	    <if test="create_time_ != null and create_time_ != ''">
		      AND create_time_ = #{create_time_}  <!-- 登录时间 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- 会话ID -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ like '%${user_id_}%'  <!-- 用户ID -->
		</if>
	    <if test="account_ != null and account_ != ''">
		      AND account_ like '%${account_}%'  <!-- 登录账户 -->
		</if>
	    <if test="user_name_ != null and user_name_ != ''">
		      AND user_name_ like '%${user_name_}%'  <!-- 用户姓名 -->
		</if>
	    <if test="ip_address_ != null and ip_address_ != ''">
		      AND ip_address_ like '%${ip_address_}%'  <!-- 客户端IP地址 -->
		</if>
	    <if test="client_type_ != null and client_type_ != ''">
		      AND client_type_ like '%${client_type_}%'  <!-- 客户端类型 -->
		</if>
	    <if test="owner_ != null and owner_ != ''">
		      AND owner_ like '%${owner_}%'  <!-- 宿主 -->
		</if>
	    <if test="create_time_ != null and create_time_ != ''">
		      AND create_time_ like '%${create_time_}%'  <!-- 登录时间 -->
		</if>
	</sql>
	
</mapper>