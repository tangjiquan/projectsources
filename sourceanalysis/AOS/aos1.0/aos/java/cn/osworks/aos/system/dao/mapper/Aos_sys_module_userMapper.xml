<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 功能模块-用户关联表[aos_sys_module_user]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2015-12-22 22:10:31 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Aos_sys_module_userMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Aos_sys_module_userPO">
		INSERT INTO aos_sys_module_user (
		<if test="user_id_ != null and user_id_ != ''">
	         user_id_, <!--  用户流水号 -->
		</if>
		<if test="module_id_ != null and module_id_ != ''">
	         module_id_, <!-- 功能模块流水号 -->
		</if>
		<if test="grant_type_ != null and grant_type_ != ''">
	         grant_type_, <!-- 权限类型 -->
		</if>
		<if test="operate_time_ != null and operate_time_ != ''">
	         operate_time_, <!-- 授权时间 -->
		</if>
		<if test="operator_id_ != null and operator_id_ != ''">
	         operator_id_, <!-- 授权人 -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- 流水号 -->
	   </if>
		)VALUES(
		<if test="user_id_ != null and user_id_ != ''">
	          #{user_id_, jdbcType=VARCHAR}, <!--  用户流水号 -->
	    </if>
		<if test="module_id_ != null and module_id_ != ''">
	          #{module_id_, jdbcType=VARCHAR}, <!-- 功能模块流水号 -->
	    </if>
		<if test="grant_type_ != null and grant_type_ != ''">
	          #{grant_type_, jdbcType=VARCHAR}, <!-- 权限类型 -->
	    </if>
		<if test="operate_time_ != null and operate_time_ != ''">
	          #{operate_time_, jdbcType=VARCHAR}, <!-- 授权时间 -->
	    </if>
		<if test="operator_id_ != null and operator_id_ != ''">
	          #{operator_id_, jdbcType=VARCHAR}, <!-- 授权人 -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- 流水号 -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Aos_sys_module_userPO">
		INSERT INTO aos_sys_module_user (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- 流水号 -->
		    #{user_id_, jdbcType=VARCHAR},  <!--  用户流水号 -->
		    #{module_id_, jdbcType=VARCHAR},  <!-- 功能模块流水号 -->
		    #{grant_type_, jdbcType=VARCHAR},  <!-- 权限类型 -->
		    #{operate_time_, jdbcType=VARCHAR},  <!-- 授权时间 -->
		    #{operator_id_, jdbcType=VARCHAR}  <!-- 授权人 -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_sys_module_userPO">
		UPDATE aos_sys_module_user
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- 流水号 -->
			</if>
			<if test="user_id_ != null">
		          user_id_ = #{user_id_, jdbcType=VARCHAR},  <!--  用户流水号 -->
			</if>
			<if test="module_id_ != null">
		          module_id_ = #{module_id_, jdbcType=VARCHAR},  <!-- 功能模块流水号 -->
			</if>
			<if test="grant_type_ != null">
		          grant_type_ = #{grant_type_, jdbcType=VARCHAR},  <!-- 权限类型 -->
			</if>
			<if test="operate_time_ != null">
		          operate_time_ = #{operate_time_, jdbcType=VARCHAR},  <!-- 授权时间 -->
			</if>
			<if test="operator_id_ != null">
		          operator_id_ = #{operator_id_, jdbcType=VARCHAR},  <!-- 授权人 -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_sys_module_user WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_sys_module_userPO">
		SELECT
		<include refid="column" />
		FROM aos_sys_module_user WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_sys_module_userPO">
		SELECT
		    <include refid="column" />
		FROM aos_sys_module_user
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_sys_module_userPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_module_user
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_sys_module_userPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_module_user
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_sys_module_userPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_module_user
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_sys_module_userPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_module_user
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM aos_sys_module_user
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_sys_module_user
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- 流水号 -->
		  user_id_,  <!--  用户流水号 -->
		  module_id_,  <!-- 功能模块流水号 -->
		  grant_type_,  <!-- 权限类型 -->
		  operate_time_,  <!-- 授权时间 -->
		  operator_id_  <!-- 授权人 -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  aos_sys_module_user.id_,  <!-- 流水号 -->
		  aos_sys_module_user.user_id_,  <!--  用户流水号 -->
		  aos_sys_module_user.module_id_,  <!-- 功能模块流水号 -->
		  aos_sys_module_user.grant_type_,  <!-- 权限类型 -->
		  aos_sys_module_user.operate_time_,  <!-- 授权时间 -->
		  aos_sys_module_user.operator_id_  <!-- 授权人 -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- 流水号 -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ = #{user_id_}  <!--  用户流水号 -->
		</if>
	    <if test="module_id_ != null and module_id_ != ''">
		      AND module_id_ = #{module_id_}  <!-- 功能模块流水号 -->
		</if>
	    <if test="grant_type_ != null and grant_type_ != ''">
		      AND grant_type_ = #{grant_type_}  <!-- 权限类型 -->
		</if>
	    <if test="operate_time_ != null and operate_time_ != ''">
		      AND operate_time_ = #{operate_time_}  <!-- 授权时间 -->
		</if>
	    <if test="operator_id_ != null and operator_id_ != ''">
		      AND operator_id_ = #{operator_id_}  <!-- 授权人 -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- 流水号 -->
		</if>
	    <if test="user_id_ != null and user_id_ != ''">
		      AND user_id_ like '%${user_id_}%'  <!--  用户流水号 -->
		</if>
	    <if test="module_id_ != null and module_id_ != ''">
		      AND module_id_ like '%${module_id_}%'  <!-- 功能模块流水号 -->
		</if>
	    <if test="grant_type_ != null and grant_type_ != ''">
		      AND grant_type_ like '%${grant_type_}%'  <!-- 权限类型 -->
		</if>
	    <if test="operate_time_ != null and operate_time_ != ''">
		      AND operate_time_ like '%${operate_time_}%'  <!-- 授权时间 -->
		</if>
	    <if test="operator_id_ != null and operator_id_ != ''">
		      AND operator_id_ like '%${operator_id_}%'  <!-- 授权人 -->
		</if>
	</sql>
	
</mapper>